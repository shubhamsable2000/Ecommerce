const DEV_BROWSER_SSO_JWT_PARAMETER = "__dev_session";
const DEV_BROWSER_JWT_MARKER = "__clerk_db_jwt";
const DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\[(.*)\]/;
function setDevBrowserJWTInURL(url, jwt, asQueryParam) {
  const resultURL = new URL(url);
  const jwtFromHash = extractDevBrowserJWTFromHash(resultURL.hash);
  resultURL.hash = resultURL.hash.replace(DEV_BROWSER_JWT_MARKER_REGEXP, "");
  if (resultURL.href.endsWith("#")) {
    resultURL.hash = "";
  }
  const jwtFromSearch = resultURL.searchParams.get(DEV_BROWSER_SSO_JWT_PARAMETER);
  resultURL.searchParams.delete(DEV_BROWSER_SSO_JWT_PARAMETER);
  const jwtToSet = jwtFromHash || jwtFromSearch || jwt;
  if (jwtToSet) {
    if (asQueryParam) {
      resultURL.searchParams.append(DEV_BROWSER_SSO_JWT_PARAMETER, jwtToSet);
    } else {
      resultURL.hash = resultURL.hash + `${DEV_BROWSER_JWT_MARKER}[${jwtToSet}]`;
    }
  }
  return resultURL;
}
function extractDevBrowserJWTFromHash(hash) {
  const matches = hash.match(DEV_BROWSER_JWT_MARKER_REGEXP);
  return matches ? matches[1] : "";
}
export {
  DEV_BROWSER_JWT_MARKER,
  DEV_BROWSER_SSO_JWT_PARAMETER,
  setDevBrowserJWTInURL
};
//# sourceMappingURL=devBrowser.js.map