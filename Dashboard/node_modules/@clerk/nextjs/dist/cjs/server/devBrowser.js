"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var devBrowser_exports = {};
__export(devBrowser_exports, {
  DEV_BROWSER_JWT_MARKER: () => DEV_BROWSER_JWT_MARKER,
  DEV_BROWSER_SSO_JWT_PARAMETER: () => DEV_BROWSER_SSO_JWT_PARAMETER,
  setDevBrowserJWTInURL: () => setDevBrowserJWTInURL
});
module.exports = __toCommonJS(devBrowser_exports);
const DEV_BROWSER_SSO_JWT_PARAMETER = "__dev_session";
const DEV_BROWSER_JWT_MARKER = "__clerk_db_jwt";
const DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\[(.*)\]/;
function setDevBrowserJWTInURL(url, jwt, asQueryParam) {
  const resultURL = new URL(url);
  const jwtFromHash = extractDevBrowserJWTFromHash(resultURL.hash);
  resultURL.hash = resultURL.hash.replace(DEV_BROWSER_JWT_MARKER_REGEXP, "");
  if (resultURL.href.endsWith("#")) {
    resultURL.hash = "";
  }
  const jwtFromSearch = resultURL.searchParams.get(DEV_BROWSER_SSO_JWT_PARAMETER);
  resultURL.searchParams.delete(DEV_BROWSER_SSO_JWT_PARAMETER);
  const jwtToSet = jwtFromHash || jwtFromSearch || jwt;
  if (jwtToSet) {
    if (asQueryParam) {
      resultURL.searchParams.append(DEV_BROWSER_SSO_JWT_PARAMETER, jwtToSet);
    } else {
      resultURL.hash = resultURL.hash + `${DEV_BROWSER_JWT_MARKER}[${jwtToSet}]`;
    }
  }
  return resultURL;
}
function extractDevBrowserJWTFromHash(hash) {
  const matches = hash.match(DEV_BROWSER_JWT_MARKER_REGEXP);
  return matches ? matches[1] : "";
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  DEV_BROWSER_JWT_MARKER,
  DEV_BROWSER_SSO_JWT_PARAMETER,
  setDevBrowserJWTInURL
});
//# sourceMappingURL=devBrowser.js.map